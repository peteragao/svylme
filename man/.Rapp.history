fitb<-predict(b,newdata=sgemm)
mean((fit-log(sgemm$Run2..ms.))^2)
mean((fitb-log(sgemm$Run2..ms.))^2)
d<-stepAIC(lm(log(Run1..ms.)~.^2,data=sgemm[ii[1:1000],1:15]))
fitd<-predict(d,newdata=sgemm)
d
mean((fitd-log(sgemm$Run2..ms.))^2)
summary(fitd)
summary(d)
mean((fitd-log(sgemm$Run2..ms.))^2)
sqrt(mean((fitd-log(sgemm$Run2..ms.))^2))
d<-stepAIC(lm(log(Run1..ms.)~.^2,data=sgemm[ii[1:500],1:15]))
fitd<-predict(d,newdata=sgemm)
summary(d)
sqrt(mean((fitd-log(sgemm$Run2..ms.))^2))
sqrt(mean((fitd-log(sgemm$Run3..ms.))^2))
args(stepAIC)
ii<-sample(nrow(sgemm))#
train<-sgemm[ii[1:500],1:15]#
folds<-rep(1:10,length=nrow(train))#
#
lambdas<-c(2,3,4,5,10)#
#
ssp<-numeric(length(lambda))#
#
for(i in 1:10){#
	insample<- folds!=i#
	outsample <- folds==i#
	for(j in 1:length(lambdas)){#
		model<-stepAIC(log(sgemm$Run1..ms.)~.^2,data=train[insample,],k=lambdas[j])#
		predictions<-predict(model, newdata=train[outsample,])#
		ssp[j]<- ssp[j] + sum( (predictions-log(train$Run1..ms.)[outsample])^2)#
	}#
}#
#
ssp
ii<-sample(nrow(sgemm))#
train<-sgemm[ii[1:500],1:15]#
folds<-rep(1:10,length=nrow(train))#
#
lambdas<-c(2,3,4,5,10)#
#
ssp<-numeric(length(lambdas))#
#
for(i in 1:10){#
	insample<- folds!=i#
	outsample <- folds==i#
	for(j in 1:length(lambdas)){#
		model<-stepAIC(lm()log(sgemm$Run1..ms.)~.^2,data=train[insample,]),k=lambdas[j])#
		predictions<-predict(model, newdata=train[outsample,])#
		ssp[j]<- ssp[j] + sum( (predictions-log(train$Run1..ms.)[outsample])^2)#
	}#
}#
#
ssp
ii<-sample(nrow(sgemm))#
train<-sgemm[ii[1:500],1:15]#
folds<-rep(1:10,length=nrow(train))#
#
lambdas<-c(2,3,4,5,10)#
#
ssp<-numeric(length(lambdas))#
#
for(i in 1:10){#
	insample<- folds!=i#
	outsample <- folds==i#
	for(j in 1:length(lambdas)){#
		model<-stepAIC(lm(log(sgemm$Run1..ms.)~.^2,data=train[insample,]),k=lambdas[j])#
		predictions<-predict(model, newdata=train[outsample,])#
		ssp[j]<- ssp[j] + sum( (predictions-log(train$Run1..ms.)[outsample])^2)#
	}#
}#
#
ssp
ii<-sample(nrow(sgemm))#
train<-sgemm[ii[1:500],1:15]#
folds<-rep(1:10,length=nrow(train))#
#
lambdas<-c(2,3,4,5,10)#
#
ssp<-numeric(length(lambdas))#
#
for(i in 1:10){#
	insample<- folds!=i#
	outsample <- folds==i#
	for(j in 1:length(lambdas)){#
		model<-stepAIC(lm(log(Run1..ms.)~.^2,data=train[insample,]),k=lambdas[j])#
		predictions<-predict(model, newdata=train[outsample,])#
		ssp[j]<- ssp[j] + sum( (predictions-log(train$Run1..ms.)[outsample])^2)#
	}#
}#
#
ssp
ls()
save(ii,folds,lambdas,predictions,train,ssp,sgemm,file="xval-sgemm.rda")
finalmodel<-stepAIC(lm(log(Run1..ms.)~.^2,data=train[insample,]),k=5)
finalmodel<-stepAIC(lm(log(Run1..ms.)~.^2,data=train),k=5)
finalmodel
summary(finalmodel)
save(ii,folds,lambdas,predictions,train,ssp,sgemm,finalmodel,file="xval-sgemm.rda")
install.packages("cvxbiclustr")
library(cvxbiclustr)
library(help=cvxbiclustr)
example(lung)
?lung
?cobra
example(cobra)
plot(sol)
library(svylme)
svy2lme
example(pisa)
debug(svy2lme)
?pisa
svy2lme(isei~(1+female|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt)
n
m0
names(m0)
slots(m0)
str(m0)
?bobyqa
m0@pp$Lind
m0@pp$Lambdat
image(m0@pp$Lambdat)
str(m0@pp$Lambdat)
str(m0@pp$Lind
)
Q
library(sampling)
apropos("tille")
UPtillepi2
inclusionprobabilities
?inclusionprobabilities
UPtillepi2
?UPtillepi2
apropos("pi2")
UPsampfordpi2
?bobyqa
m0
undebug(svy2lme)
svy2lme(isei~(1+female|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt)->m
m
str(m)
?lmer
?bobyqa
apropos('svr')
?svrVar
q()
library(svylme)
example(pisa)
traceback()
debug(svy2lme)
?pisa
svy2lme(isei~(1|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt)
sys.call()
devfun
n
Q
q()
library(pisa)
library(svylme)
example(pisa)
svy2lme(isei~(1|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt,return.devfun=TRUE)->m
traceback()
fixInNamespace("svy2lme","svylme")
svy2lme(isei~(1|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt,return.devfun=TRUE)->m
svy2lme
fixInNamespace("svy2lme","svylme")
ls()
svy2lme
q()
library(svylme)
svy2lme(isei~(1|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt)
example(pisa)
svy2lme(isei~(1|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt,return.devfun=TRUE)->m
m
str(m)
?pisa
dpisa<-survey::svydesign(id=~id_school, weight=~w_fstuwt, data=pisa)
as.svrepdesign(dpisa)
as.svrepdesign(dpisa)->rpisa
svy2lme(isei~(1+female|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt, design=dpisa,return.devfun=TRUE)->m
m
?weights.svyrep.design
weights(rpisa,"rep")
q()
library(svy2lme)
library(svylme)
svy2lme(isei~(1+female|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt, design=dpisa,return.devfun=TRUE)->m
data(pisa)
svy2lme(isei~(1+female|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt, design=dpisa,return.devfun=TRUE)->m
example(pisa)
svy2lme(isei~(1+female|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt, design=dpisa,return.devfun=TRUE)->m
rpisa<-as.svrepdesign(dpisa)
rpisa
boot.svy2lme(m,weights(rpisa,"sampling",weights(rpisa,"analysis"),))
str(weights(rpisa,"analyis"))
str(weights(rpisa,"analysis"))
str(weights(rpisa,"rep"))
str(weights(rpisa,"samp"))
str(rpisa)
boot.svy2lme(m,weights(rpisa,"sampling"),weights(rpisa,"analysis"),rpisa$scale,rpisa$rscales,verbose=TRUE)
fixInNamespace("boot.svy2lme","svylme")
boot.svy2lme(m,weights(rpisa,"sampling"),weights(rpisa,"analysis"),rpisa$scale,rpisa$rscales,verbose=TRUE)
?fixInNamespace
q()
library(svylme)
example(pisa)
rpisa<-as.svrepdesign(dpisa)
svy2lme(isei~(1+female|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt, design=dpisa)->m
boot.svy2lme(m,weights(rpisa,"sampling"),weights(rpisa,"analysis"),rpisa$scale,rpisa$rscales,verbose=TRUE)
environment(model$devfun)
environment(m$devfun)
m$devfun
str(m)
svy2lme(isei~(1+female|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt, design=dpisa,return.devfun=TRUE)->m
environment(m$devfun)
boot.svy2lme(m,weights(rpisa,"sampling"),weights(rpisa,"analysis"),rpisa$scale,rpisa$rscales,verbose=TRUE)
q()
library(svylme)
example(pisa)
rpisa<-as.svrepdesign(dpisa)
svy2lme(isei~(1+female|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt, design=dpisa,return.devfun=TRUE)->m
boot.svy2lme(m,weights(rpisa,"sampling"),weights(rpisa,"analysis"),rpisa$scale,rpisa$rscales,verbose=TRUE)
options(error=recover)
boot.svy2lme(m,weights(rpisa,"sampling"),weights(rpisa,"analysis"),rpisa$scale,rpisa$rscales,verbose=TRUE)
dim(thetastar)
i
aaa<-bobyqa(theta0, model$devfun,#
                              lower = model$lower,#
                              upper = rep(Inf, length(theta0)), pwt=repwt[,i]*pwt0)$par
aaa
theta0
Q
q()
library(svylme)
example(pisa)
rpisa<-as.svrepdesign(dpisa)
svy2lme(isei~(1+female|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt, design=dpisa,return.devfun=TRUE)->m
boot.svy2lme(m,weights(rpisa,"sampling"),weights(rpisa,"analysis"),rpisa$scale,rpisa$rscales,verbose=TRUE)
system.time(rrr<-boot.svy2lme(m,weights(rpisa,"sampling"),weights(rpisa,"analysis"),rpisa$scale,rpisa$rscales,verbose=TRUE,return.replicates=TRUE))
rrr
rrr[[1]]
rrr[[2]]
m$Vbeta
sqrt(diag(rrr[[1]]))
theta0
m0@theta
m0@fit
m@fit
m0@theta
m@theta
m$opt$par
names(rrr)
names(rrr$replicates)
names(rrr$replicates$theta)
(rrr$replicates$theta)
summary(rrr$replicates$theta)
plot(density(rrr$replicates$theta[,3]))
pisa[rpisa$replicates[,144]==0,]
pisa[rpisa$rep[,144]==0,]
pisa[weights(rpisa,"rep")[,144]==0,]
plot(density(rrr$replicates$theta[-144,3]))
pisa[rpisa$rep[,134]==0,]
rpisa$rep[,134]==0
pisa[weights(rpisa,"rep")[,134]==0,]
plot(density(rrr$replicates$theta[-134,3]))
plot(density(rrr$replicates$theta[-134,2]))
plot(density(rrr$replicates$theta[-134,1]))
summary(rrr$replicates$theta)
m
q()
library(svylme)
example(psa)
example(pisa)
bpisa<-as.svrepdesign(dpisa, type="bootstrap",replicates=100)
svy2lme(isei~(1+female|id_school)+female+high_school+college+one_for+both_for+test_lang,#
pisa+ 	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt, design=dpisa,return.devfun=TRUE)->m
svy2lme(isei~(1+female|id_school)+female+high_school+college+one_for+both_for+test_lang,#
	data=pisa, p1=1/pisa$wnrschbw,p2=pisa$wnrschbw/pisa$w_fstuwt, design=dpisa,return.devfun=TRUE)->m
boot.svy2lme(m, weights(bpisa,"sampling"),weights(bpisa,"analysis"),bpisa$scale,bpisa$rscales,return.replicates=TRUE,verbose=TRUE )->b
b
b$Vtheta
vcov(m)
b$Vbeta
b$Vtheta
b$Vs2
setwd("~/svy2lme/man")
setwd("~/svylme/man")
boot2lme<-boot.svy2lme
prompt(boot2lme)
source("http://bioconductor.org/biocLite.R")#
    biocLite("Rgraphviz")
library(help=Rgraphviz)
?renderGraph
library(Rgraphviz)
?renderGraph
set.seed(123)#
V <- letters[1:5]#
M <- 1:2#
g1 <- randomGraph(V, M, 0.5)#
edgemode(g1) <- "directed"#
x <- layoutGraph(g1)#
renderGraph(x)
?layoutGraph
g1
str(g1)
?agread
a<-agread("~/pirates.dot")
a
renderGraph(layoutGraph(a))
layoutGraph(a)
renderGraph(a)
plot(a)
a<-agread("~/pirates.dot",layout=TRUE)
plot(a)
a<-agread("~/pirates2.dot",layout=TRUE)
a<-agread("~/pirates1.dot",layout=TRUE)
plot(a)
class(a)
graphvizCapabilities()$layoutTypes
a<-agread("~/pirates1.dot",layout=TRUE,layoutType="dot")
plot(a)
edgemode(a)
a
str(a)
class(a)
dev.off()
getMethod("plot","Ragraph")
plot(a,edgemode="directed")
str(a)
edgemode(a)
edgemode(a)<-"directed"
a<-agread("~/pirates1.dot",layout=TRUE,layoutType="dot")
